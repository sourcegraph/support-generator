(this["webpackJsonpcommand-line-generator"]=this["webpackJsonpcommand-line-generator"]||[]).push([[0],{12:function(e,t,o){},21:function(e,t,o){},22:function(e,t,o){},29:function(e){e.exports=JSON.parse('{"$schema":"http://json-schema.org/draft-07/schema#","$id":"github.schema.json#","title":"List of Commands","description":"A list of frequently-used commands for each Sourcegraph deployment type.","allowComments":true,"type":"object","additionalProperties":false,"Docker":{"Get Logs":{"command":"docker logs","option":"$CONTAINER","description":"Get the logs of a container."},"List Containers":{"command":"docker ps -A","option":"","description":"Get a list of containers."},"Install or Start Sourcegraph":{"command":"docker run -d --publish 7080:7080 --publish 127.0.0.1:3370:3370 --rm --volume ~/.sourcegraph/config:/etc/sourcegraph --volume ~/.sourcegraph/data:/var/opt/sourcegraph sourcegraph/server:","option":"$VERSION","description":"The docker run command first creates a writeable container layer over the specified image, and then starts it using the specified command."},"Upgrade Sourcegraph":{"command":"docker run -d --publish 7080:7080 --publish 127.0.0.1:3370:3370 --rm --volume ~/.sourcegraph/config:/etc/sourcegraph --volume ~/.sourcegraph/data:/var/opt/sourcegraph sourcegraph/server:","option":"$VERSION","description":"All you need to do to upgrade Sourcegraph is to restart your Docker server with a new image tag."},"Run Bash Shell":{"command":"docker exec -it","option":"$CONTAINER","command2":"bash","description":"This allows you to execute an interactive bash shell on a running container."},"Kill Container":{"command":"docker kill","option":"$CONTAINER","description":"Kill one or more containers."},"Restart Container":{"command":"docker restart","option":"$CONTAINER","description":"Restart one or more containers."},"Run Interactive Shell":{"command":"docker exec -it","option":"$CONTAINER","command2":"shell","description":"This allows you to execute an interactive shell on a running container."}},"Docker Compose":{"Get Logs":{"command":"docker-compose logs","option":"$CONTAINER","description":"Get the logs of a container."},"List Containers":{"command":"docker-compose ps -a","option":"","description":"Get a list of containers."},"Kill Containers":{"command":"docker-compose kill","option":"","description":"Get a list of containers."},"Start Sourcegraph":{"command":"docker-compose up -d","option":"","description":"Builds, (re)creates, starts, and attaches to containers for Sourcegraph. `-d` flag starts the container in the detached mode where the container runs in the background."},"Shutdown Sourcegraph":{"command":"docker-compose down","option":"","description":"Stops containers and removes containers, networks, volumes, and images created by docker up."},"Run Bash Shell":{"command":"docker-compose exec -it","option":"$CONTAINER","command2":"bash","description":"This allows you to execute an interactive bash shell on a running container."},"Run Interactive Shell":{"command":"docker-compose exec -it","option":"$CONTAINER","command2":"shell","description":"This allows you to execute an interactive shell on a running container."}},"Kubernetes":{"Get Logs":{"command":"kubectl logs -f","option":"$POD","description":"Get the logs of a specified pod."},"List Pods":{"command":"kubectl get pods -A","option":"","description":"Get a list of pods within the cluster and their health status."},"Describe Pod":{"command":"kubectl describe","option":"$POD","description":"Display detailed information about the status of a single pod"},"Restart Sourcegraph":{"command":"kubectl rollout restart deployment/sourcegraph-frontend","option":"$POD","description":"Restart Sourcegraph Instance by restarting the frontend pod."},"Get Events":{"command":"kubectl get events","option":"","description":"List all events in the cluster\u2019s history."},"Delete a Pod":{"command":"kubectl delete pod","option":"$POD","description":"Delete a failing pod so that it will get recreated, possibly on a different node."},"List Persistent Volume Claims (PVCs)":{"command":"kubectl get pvc","option":"","description":"List all Persistent Volume Claims (PVCs) and their statuses."},"List Persistent Volumes (PVs)":{"command":"kubectl get pv","option":"","description":"List all Persistent Volumes (PVs) that have been provisioned."},"Port Forward Sourcegraph":{"command":"kubectl port-forward svc/sourcegraph-frontend 3080:30080","option":"","description":"This allows you to access your deployed Sourcegraph instance locally."},"Run Interactive Shell":{"command":"kubectl exec -it","option":"$POD","command2":" sh","description":"This allows you to execute an interactive shell on a Pod."},"Check Dirty Database":{"command":"kubectl exec","option":"$PGSQL_POD","command2":"-- psql -U sg -c \'SELECT * FROM schema_migrations\'","description":"Get inside the PGSQL Pod to check for dirty database."},"Generate Postgres Database Dump":{"command":"kubectl exec -it -- bash","option":"$PGSQL_POD","command2":"-c \'pg_dump -C -U sg\' > sourcegraph_db.out","description":"This allows you to generate a database dump for Postgres."},"Generate Code Intel Database Dump":{"command":"kubectl exec -it -- bash","option":"$CODEINTEL_POD","command2":"-c \'pg_dump -C -U sg\' > codeintel_db.out","description":"This allows you to generate a database dump for the Code Intel service."},"Stop existing deployment":{"command":"kubectl scale --replicas=0 deployment/sourcegraph-frontend","option":"","description":"Stop the existing deployment by removing the frontend."},"Show pod metrics":{"command":"kubectl top pod -- containers","option":"$POD","description":"This allows you to show metrics for a given pod and it\'s containers."},"Check Storage Class":{"command":"kubectl get storage class","option":"","description":"This allows you to check the existence of a storage class and it\'s name."}}}')},30:function(e,t,o){},31:function(e,t,o){},32:function(e,t,o){},33:function(e,t,o){"use strict";o.r(t);var n=o(1),c=o.n(n),a=o(13),s=o.n(a),i=(o(21),o(3)),r=o(2),l=(o(22),o(0));function d(e){var t=e.selectedDeployment,o=e.setSelectedDeployment,n=e.setSelectedAction,c=e.hasNamespace,a=e.setHasNamespace,s=e.namespace,i=e.setNamespace,d=Object(r.f)(),p=d.deployment,m=d.namespaceParam,u=Object(r.e)();return"Docker"!==p&&"docker"!==p||o("Docker"),"Docker Compose"!==p&&"dc"!==p||o("Docker Compose"),"Kubernetes"!==p&&"k8s"!==p||o("Kubernetes"),m&&(a(!0),i(m)),Object(l.jsxs)("div",{className:"deployment-container",children:[Object(l.jsxs)("div",{className:"deployment-type",children:[Object(l.jsx)("h4",{className:"section",children:"Select deployment:"}),Object(l.jsxs)("select",{onChange:function(e){u.push("/".concat(e.target.value)),o(e.target.value),i(""),a(!1),n("Get Logs")},defaultValue:t,value:t,className:"dropdown-menu",children:[Object(l.jsx)("option",{value:"Docker",children:"Docker"}),Object(l.jsx)("option",{value:"Docker Compose",children:"Docker Compose"}),Object(l.jsx)("option",{value:"Kubernetes",children:"Kubernetes"})]})]}),"Kubernetes"===t&&Object(l.jsxs)("div",{children:[Object(l.jsxs)("div",{className:"namespace-check",children:[Object(l.jsx)("input",{type:"checkbox",value:c,onChange:function(){return a(!c)}}),Object(l.jsx)("label",{className:"namespace-label",name:"namespace",children:"I am using a namespace."})]}),c&&Object(l.jsx)("div",{className:"namespace-input",children:Object(l.jsx)("input",{type:"text",placeholder:"$NAMESPACE",value:s,onChange:function(e){return i(e.target.value)},className:"text-input",autoFocus:!0})})]})]})}function p(e){var t=e.value,o=e.opt;return Object(l.jsx)("option",{value:t,opt:o,children:t})}function m(e){var t=e.defaultValue,o=e.map,c=e.optionValues,a=e.option,s=e.setOption,i=e.deployment,d=e.selectedDeployment,m=e.setSelectedAction,u=e.selectedAction,h=e.command,b=e.setCommand,j=e.hasNamespace,O=e.namespace;var g=Object(r.e)();return Object(n.useEffect)((function(){if(o[u]){!a&&s(o[u].option);var e=o[u].command,t=o[u].command2?o[u].command2:null;b(j?"".concat(e," ").concat(a," -n ").concat(O," ").concat(t||""):"".concat(e," ").concat(a," ").concat(t||""))}}),[s,b,u,s,o,O,j,a,h]),Object(l.jsxs)("div",{className:"deployment-type",children:[Object(l.jsx)("h4",{className:"section",children:"Select action to take:"}),Object(l.jsx)("select",{onChange:function(e){var t=encodeURIComponent(e.target.value);m(e.target.value),g.push("/".concat(i,"/").concat(t)),s("")},defaultValue:t,value:d,className:"dropdown-menu",children:c&&c.map((function(e,t){return Object(l.jsx)(p,{value:e,opt:o[e].option||null},"option-".concat(t))}))})]})}var u=o(29),h=function(e){var t=[];for(var o in e)t.push(o);return t};o(30);function b(e){var t=e.selectedDeployment,o=e.selectedAction,n=e.setSelectedAction,c=e.option,a=e.setOption,s=e.setCommand,i=e.namespace,d=e.hasNamespace,p=u[t],b=h(p),j=Object(r.f)(),O=j.deployment,g=j.action,f=j.podParam;return g=g?decodeURIComponent(g):o,f&&a(f),Object(l.jsx)("div",{className:"actions-container",children:Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)(m,{selectedAction:g,defaultValue:g,optionValues:b,deployment:O,map:p,option:c,setOption:a,setSelectedAction:n,setCommand:s,command:s,hasNamespace:d,namespace:i}),p[o]&&p[o].option&&Object(l.jsx)("div",{className:"action-option",children:Object(l.jsx)("input",{type:"text",placeholder:p[o].option,value:c,onChange:function(e){return a(e.target.value)},className:"text-input",autoFocus:!0})})]})})}o(31);function j(e){var t=e.selectedDeployment,o=e.command,c=Object(n.useState)("Copy"),a=Object(i.a)(c,2),s=a[0],r=a[1];Object(n.useEffect)((function(){r("Copy")}),[o,t]);return Object(l.jsxs)("div",{className:"command-container",children:[Object(l.jsx)("div",{className:"command-input-container",children:Object(l.jsx)("textarea",{className:"command",type:"text",defaultValue:"select-deployment"===t?"[SELECT DEPLOYMENT TYPE]":o})}),Object(l.jsx)("div",{className:"btn-container",children:Object(l.jsx)("button",{className:"copy-button",onClick:function(){navigator.clipboard.writeText(o),r("Copied!")},disabled:"select-deployment"===t,children:s})})]})}var O=o(16);o(32),o(12);function g(e){var t=e.key,o=e.func,c=e.info,a=e.currentInfoOpen,s=e.setCurrentInfoOpen,r=Object(n.useState)(!1),d=Object(i.a)(r,2),p=d[0],m=d[1],u=Object(n.useState)(!1),h=Object(i.a)(u,2),b=h[0],j=h[1],O=function(){a!==o?(s(o),j(!0),m(!0)):(s("Function"),j(!1),m(!1))};return Object(n.useEffect)((function(){}),[a]),Object(l.jsx)(l.Fragment,{children:"Function"!==o&&Object(l.jsxs)("li",{className:"desc-item",onMouseEnter:function(){return O()},onMouseLeave:function(){return O()},children:[Object(l.jsxs)("div",{className:"row ".concat(a===o&&"expanded"),children:[Object(l.jsx)("div",{children:o}),p&&Object(l.jsxs)("button",{className:"expand",children:[Object(l.jsx)("div",{children:"i\xa0"}),b&&a===o?Object(l.jsx)("div",{className:"rotated",children:"<"}):Object(l.jsx)("div",{children:"<"})]})]}),a===o&&Object(l.jsx)("div",{className:"command-info",children:Object(l.jsx)("ul",{className:"description",children:Object(l.jsxs)("li",{children:[Object(l.jsx)("span",{className:"info-key",children:"Description:\xa0"}),c.description]})})})]},t)})}function f(e){var t=e.selectedDeployment,o=u[t],c=h(o),a=Object(n.useState)("Function"),s=Object(i.a)(a,2),r=s[0],d=s[1];return Object(l.jsxs)("div",{children:[Object(l.jsx)("h4",{className:"section right",children:"Descriptions"}),c?Object(l.jsx)("ul",{className:"desc-list",children:c.map((function(e,t){var n=o[e];return Object(l.jsx)(g,{func:c[t],info:n,currentInfoOpen:r,setCurrentInfoOpen:d},"desc-".concat(t))}))}):Object(l.jsx)("div",{children:"Choose Deployment to get descriptions."})]})}var v=function(){var e=Object(n.useState)("Docker"),t=Object(i.a)(e,2),o=t[0],c=t[1],a=Object(n.useState)("Get Logs"),s=Object(i.a)(a,2),p=s[0],m=s[1],u=Object(n.useState)(!1),h=Object(i.a)(u,2),g=h[0],v=h[1],x=Object(n.useState)(""),y=Object(i.a)(x,2),N=y[0],k=y[1],C=Object(n.useState)(""),S=Object(i.a)(C,2),D=S[0],P=S[1],w=Object(n.useState)(""),E=Object(i.a)(w,2),I=E[0],T=E[1];return Object(l.jsx)(O.a,{children:Object(l.jsxs)("div",{className:"App",children:[Object(l.jsx)("img",{alt:"sourcegraph-logo",src:"https://github.com/sourcegraph/support-generator/blob/main/public/images/Sourcegraph_Logo_FullColor_light.png?raw=true",className:"logo"}),Object(l.jsx)("h2",{className:"subtitle",children:"Command Generator"}),Object(l.jsxs)("div",{className:"container",children:[Object(l.jsx)("div",{className:"actions",children:Object(l.jsx)(r.a,{path:"/support-generator/:deployment?/:action?/:podParam?/:namespaceParam?",component:function(){return Object(l.jsxs)("div",{className:"deploy-container",children:[Object(l.jsx)(d,{selectedDeployment:o,setSelectedDeployment:c,setSelectedAction:m,hasNamespace:g,setHasNamespace:v,namespace:N,setNamespace:k,setCommand:T}),Object(l.jsx)(b,{selectedDeployment:o,selectedAction:p,setSelectedAction:m,option:D,setOption:P,command:I,setCommand:T,hasNamespace:g,namespace:N})]})}})}),Object(l.jsx)("div",{className:"line-break"}),Object(l.jsx)("div",{className:"descriptions-container",children:Object(l.jsx)(f,{selectedDeployment:o})})]}),Object(l.jsx)("div",{children:Object(l.jsx)(j,{selectedDeployment:o,selectedAction:p,command:I,setCommand:T,namespace:N,option:D})})]})})},x=function(e){e&&e instanceof Function&&o.e(3).then(o.bind(null,34)).then((function(t){var o=t.getCLS,n=t.getFID,c=t.getFCP,a=t.getLCP,s=t.getTTFB;o(e),n(e),c(e),a(e),s(e)}))};s.a.render(Object(l.jsx)(c.a.StrictMode,{children:Object(l.jsx)(v,{})}),document.getElementById("root")),x()}},[[33,1,2]]]);
//# sourceMappingURL=main.6e1b2798.chunk.js.map