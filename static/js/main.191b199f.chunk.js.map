{"version":3,"sources":["Components/Deployment/Deployment.jsx","Components/UI/DropdownOption.jsx","Components/UI/Dropdown.jsx","utils/commands.js","utils/helpers.js","Components/Action/Action.jsx","Components/UI/GenerateLink.jsx","Components/UI/GeneratedURI.jsx","Components/Descriptions/Description.jsx","Components/Descriptions/Descriptions.jsx","Components/UI/Or.jsx","Components/UI/CopyBtn.jsx","Components/Command/GeneratedCommand.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Deployment","selectedDeployment","setSelectedDeployment","setSelectedAction","hasNamespace","setHasNamespace","namespace","setNamespace","setOption","setGeneratedURI","className","onChange","e","target","value","type","checked","name","placeholder","DropdownOption","opt","Dropdown","defaultValue","map","optionValues","option","selectedAction","command","setCommand","useEffect","command1","command2","val","i","commands","getOptionValues","obj","arr","push","console","log","Action","dockerMap","dockerComposeMap","kubernetesMap","dockerOptions","dockerComposeOptions","kubernetesOptions","GenerateLink","deployment","action","generatedURI","generateURL","BASE_URL","window","location","href","split","length","QUERY_STRING","encodeURIComponent","onClick","disabled","GeneratedURI","useState","copiedUrl","setCopiedUrl","copyUrl","navigator","clipboard","writeText","setTimeout","readOnly","Description","func","info","currentInfoOpen","setCurrentInfoOpen","showInfoOption","setShowInfoOption","showDesc","setShowDesc","handleExpand","onMouseEnter","onMouseLeave","description","Descriptions","deploymentMap","mapKeys","len","mapKey","vals","Or","CopyBtn","copyCommand","GeneratedCommand","commandCopied","setCommandCopied","App","queryParams","URLSearchParams","search","get","nSpace","alt","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.191b199f.chunk.js","sourcesContent":["// ANCHOR CSS\nimport './Deployment.css';\n\nexport default function Deployment({\n    selectedDeployment,\n    setSelectedDeployment,\n    setSelectedAction,\n    hasNamespace,\n    setHasNamespace,\n    namespace,\n    setNamespace,\n    setOption,\n    setGeneratedURI\n}) {\n    return (\n        <div className=\"deployment-container\">\n\n            <div className=\"deployment-type\">\n                <h4 className=\"section\">Select deployment:</h4>\n                <select\n                    onChange={(e) => {\n                        setSelectedDeployment(e.target.value)\n                        setNamespace(\"\")\n                        setHasNamespace(false)\n                        setSelectedAction(\"Function\")\n                        setOption(\"\");\n                        setGeneratedURI(\"\")\n                    }}\n                    value={selectedDeployment}\n                    className=\"dropdown-menu\"\n                >\n                    <option value=\"select-deployment\">Select Your Deployment Type...</option>\n                    <option value=\"Docker\">Docker</option>\n                    <option value=\"Docker Compose\">Docker Compose</option>\n                    <option value=\"Kubernetes\">Kubernetes</option>\n                </select>\n            </div>\n\n            {selectedDeployment === \"Kubernetes\" &&\n                <div>\n                    <div className=\"namespace-check\">\n                        {hasNamespace ? (\n                            <input\n                                type=\"checkbox\"\n                                value={hasNamespace}\n                                onChange={() => setHasNamespace(!hasNamespace)}\n                                checked\n                            />\n                        ) : (\n                            <input\n                                type=\"checkbox\"\n                                value={hasNamespace}\n                                onChange={() => setHasNamespace(!hasNamespace)}\n                            />\n                        )}\n\n                        <label className=\"namespace-label\" name=\"namespace\">I am using a namespace.</label>\n                    </div>\n\n                    {hasNamespace &&\n                        <div className=\"namespace-input\">\n                            <input\n                                type=\"text\"\n                                placeholder=\"$NAMESPACE\"\n                                value={namespace}\n                                onChange={(e) => setNamespace(e.target.value)}\n                                className=\"text-input\"\n                            />\n                        </div>\n                    }\n                </div>\n            }\n        </div>\n    )\n}","export default function DropdownOption({value, opt}) {\n    return (\n        <option \n            value={value}\n            opt={opt}\n        >\n            {value}\n        </option>\n    )\n}","// ANCHOR External Modules\nimport { useEffect } from 'react';\n\n// ANCHOR Internal Modules\nimport DropdownOption from './DropdownOption';\n\nexport default function Dropdown({\n    defaultValue,\n    map,\n    optionValues,\n    option,\n    setOption,\n    selectedDeployment,\n    setSelectedAction,\n    selectedAction,\n    command,\n    setCommand,\n    hasNamespace,\n    namespace,\n    setGeneratedURI\n}) {\n    function generateOptions() {\n        return optionValues.map((val, i) => {\n            return (\n                <DropdownOption\n                    key={`option-${i}`}\n                    value={val}\n                    opt={map[val][\"option\"] || null}\n                />\n            )\n        })\n    }\n\n    useEffect(() => {\n        const command1 = map[selectedAction][\"command\"];\n        const command2 = map[selectedAction][\"command2\"]\n            ? map[selectedAction][\"command2\"]\n            : null;\n\n        if (hasNamespace && option === \"\") {\n            setCommand(`${command1} -n ${namespace} ${command2 ? command2 : \"\"}`);\n        } else if (hasNamespace && option !== \"\") {\n            setCommand(`${command1}${option} -n ${namespace} ${command2 ? command2 : \"\"}`);\n        } else if (!hasNamespace && option !== \"\") {\n            setCommand(`${command1}${option} ${command2 ? command2 : \"\"}`);\n        } else {\n            setCommand(`${command1}${command2 ? command2 : \"\"}`);\n        }\n    }, [\n        setCommand,\n        selectedAction,\n        map,\n        namespace,\n        hasNamespace,\n        option,\n        command\n    ]\n    );\n\n    return (\n        <div className=\"deployment-type\">\n            <h4 className=\"section\">Select action to take:</h4>\n            <select\n                onChange={(e) => {\n                    setSelectedAction(e.target.value);\n                    setOption(\"\");\n                    setGeneratedURI(\"\");\n                }}\n                defaultValue={defaultValue}\n                value={selectedDeployment}\n                className=\"dropdown-menu\"\n            >\n                {optionValues && generateOptions()}\n            </select>\n        </div>\n    )\n}","export const commands = {\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"$id\": \"github.schema.json#\",\n    \"title\": \"List of Commands\",\n    \"description\": \"A list of frequently-used commands for each Sourcegraph deployment type.\",\n    \"allowComments\": true,\n    \"type\": \"object\",\n    \"additionalProperties\": false,\n    \"Docker\": {\n        \"Function\": {\n            \"value\": \"Function\",\n            \"command\": \"[CHOOSE FUNCTION]\",\n            \"description\": \"Default option\"\n        },\n        \"Get Logs\": {\n            \"value\": \"Get Logs\",\n            \"command\": \"docker logs \",\n            \"option\": \"$CONTAINER\",\n            \"description\": \"Get the logs of a container.\"\n        },\n        \"List Containers\": {\n            \"value\": \"List Containers\",\n            \"command\": \"docker ps -a \",\n            \"description\": \"Get a list of containers.\"\n        },\n        \"Install/Run Sourcegraph\": {\n            \"value\": \"Insall/Run Sourcegraph\",\n            \"command\": \"docker run -d --publish 7080:7080 --publish 127.0.0.1:3370:3370 --rm --volume ~/.sourcegraph/config:/etc/sourcegraph --volume ~/.sourcegraph/data:/var/opt/sourcegraph sourcegraph/server:\",\n            \"option\": \"$VERSION\",\n            \"description\": \"The docker run command first creates a writeable container layer over the specified image, and then starts it using the specified command.\"\n        },\n        \"Upgrade Sourcegraph\": {\n            \"value\": \"Upgrade Sourcegraph\",\n            \"command\": \"docker run -d --publish 7080:7080 --publish 127.0.0.1:3370:3370 --rm --volume ~/.sourcegraph/config:/etc/sourcegraph --volume ~/.sourcegraph/data:/var/opt/sourcegraph sourcegraph/server:\",\n            \"option\": \"$VERSION\",\n            \"description\": \"All you need to do to upgrade Sourcegraph is to restart your Docker server with a new image tag.\"\n        },\n        \"Run Bash Shell\": {\n            \"value\": \"Run Bash Shell\",\n            \"command\": \"docker exec -it \",\n            \"option\": \"$CONTAINER\",\n            \"command2\": \" bash\",\n            \"description\": \"This allows you to execute an interactive bash shell on a running container.\"\n        },\n        \"Kill Container\": {\n            \"value\": \"Kill Container\",\n            \"command\": \"docker kill \",\n            \"option\": \"$CONTAINER\",\n            \"description\": \"Kill one or more containers.\"\n        },\n        \"Restart Container\": {\n            \"value\": \"Restart Container\",\n            \"command\": \"docker restart \",\n            \"option\": \"$CONTAINER\",\n            \"description\": \"Restart one or more containers.\"\n        },\n        \"Run Interactive Shell\": {\n            \"value\": \"Run Interactive Shell\",\n            \"command\": \"docker exec -it \",\n            \"option\": \"$CONTAINER\",\n            \"command2\": \" shell\",\n            \"description\": \"This allows you to execute an interactive shell on a running container.\"\n        }\n    },\n    \"Docker Compose\": {\n        \"Function\": {\n            \"value\": \"Function\",\n            \"command\": \"[CHOOSE FUNCTION]\",\n            \"description\": \"Default option\"\n        },\n        \"Get Logs\": {\n            \"command\": \"docker-compose logs \",\n            \"option\": \"$CONTAINER\",\n            \"description\": \"Get the logs of a container.\"\n        },\n        \"List Containers\": {\n            \"command\": \"docker-compose ps -a\",\n            \"description\": \"Get a list of containers.\"\n        },\n         \"Kill Containers\": {\n            \"command\": \"docker-compose kill\",\n            \"description\": \"Get a list of containers.\"\n        },\n        \"Install/Run Sourcegraph\": {\n            \"command\": \"docker-compose up -d\",\n            \"description\": \"Builds, (re)creates, starts, and attaches to containers for Sourcegraph. `-d` flag starts the container in the detached mode where the container runs in the background.\"\n        },\n        \"Shutdown Sourcegraph\": {\n            \"command\": \"docker-compose down\",\n            \"description\": \"Stops containers and removes containers, networks, volumes, and images created by docker up.\"\n        },\n        \"Run Bash Shell\": {\n            \"command\": \"docker-compose exec -it \",\n            \"option\": \"$CONTAINER\",\n            \"command2\": \" bash\",\n            \"description\": \"This allows you to execute an interactive bash shell on a running container.\"\n        },\n        \"Run Interative Shell\": {\n            \"command\": \"docker-compose exec -it \",\n            \"option\": \"$CONTAINER\",\n            \"command2\": \" shell\",\n            \"description\": \"This allows you to execute an interactive shell on a running container.\"\n        }\n    },\n    \"Kubernetes\": {\n        \"Function\": {\n            \"value\": \"Function\",\n            \"command\": \"[CHOOSE FUNCTION]\",\n            \"description\": \"Default option\"\n        },\n        \"Get Logs\": {\n            \"command\": \"kubectl logs -f \",\n            \"option\": \"$POD\",\n            \"description\": \"Get the logs of a specified pod.\"\n        },\n        \"List Pods\": {\n            \"command\": \"kubectl get pods -A \",\n            \"description\": \"Get a list of pods within the cluster and their health status.\"\n        },\n        \"Describe Pod\": {\n            \"command\": \"kubectl describe \",\n            \"option\": \"$POD\",\n            \"description\": \"Display detailed information about the status of a single pod\"\n        },\n        \"Restart Sourcegraph\": {\n            \"command\": \"kubectl rollout restart deployment/sourcegraph-frontend -n prod \",\n            \"option\": \"$POD\",\n            \"description\": \"Restart Sourcegraph Instance by restarting the frontend pod.\"\n        },\n        \"Get Events\": {\n            \"command\": \"kubectl get events \",\n            \"description\": \"List all events in the cluster’s history.\"\n        },\n        \"Delete a Pod\": {\n            \"command\": \"kubectl delete pod \",\n            \"option\": \"$POD\",\n            \"description\": \"Delete a failing pod so that it will get recreated, possibly on a different node.\"\n        },\n        \"List Persistent Volume Claims (PVCs)\": {\n            \"command\": \"kubectl get pvc\",\n            \"description\": \"List all Persistent Volume Claims (PVCs) and their statuses.\"\n        },\n        \"List Persistent Volumes (PVs)\": {\n            \"command\": \"kubectl get pv\",\n            \"description\": \"List all Persistent Volumes (PVs) that have been provisioned.\"\n        },\n        \"Port Forward Sourcegraph\": {\n            \"command\": \"kubectl port-forward svc/sourcegraph-frontend 3080:30080\",\n            \"description\": \"This allows you to access your deployed Sourcegraph instance locally.\"\n        },\n        \"Run Interative Shell\": {\n            \"command\": \"kubectl exec -it \",\n            \"option\": \"$POD\",\n            \"command2\": \" sh\",\n            \"description\": \"This allows you to execute an interactive shell on a Pod.\"\n        },\n        \"Check Dirty Database\": {\n            \"command\": \"kubectl exec \",\n            \"option\": \"$PGSQL_POD\",\n            \"command2\": \" -- psql -U sg -c 'SELECT * FROM schema_migrations'\",\n            \"description\": \"Get inside the PGSQL Pod to check for dirty database.\"\n        }\n    }\n}","export const getOptionValues = (obj) => {\n    const arr = [];\n    for (let i in obj) {\n        arr.push(i);\n    }\n    console.log(arr);\n    return arr;\n}","// ANCHOR Internal Modules\nimport Dropdown from \"../UI/Dropdown\";\nimport { commands } from '../../utils/commands';\nimport { getOptionValues } from '../../utils/helpers';\n\n// ANCHOR CSS\nimport './Action.css';\n\n\n\nexport default function Action({\n    selectedDeployment,\n    selectedAction,\n    setSelectedAction,\n    option,\n    setOption,\n    setCommand,\n    namespace,\n    hasNamespace,\n    setGeneratedURI\n}) {\n    const dockerMap = commands[\"Docker\"];\n    const dockerComposeMap = commands[\"Docker Compose\"];\n    const kubernetesMap = commands[\"Kubernetes\"];\n    const dockerOptions = getOptionValues(dockerMap);\n    const dockerComposeOptions = getOptionValues(dockerComposeMap);\n    const kubernetesOptions = getOptionValues(kubernetesMap);\n\n    return (\n        <div className=\"actions-container\">\n\n            {/* Docker Action Menu */}\n            {selectedDeployment === \"Docker\" &&\n                <>\n                    <Dropdown\n                        selectedAction={selectedAction}\n                        defaultValue={selectedAction}\n                        optionValues={dockerOptions}\n                        option={option}\n                        setOption={setOption}\n                        map={dockerMap}\n                        setSelectedAction={setSelectedAction}\n                        command={setCommand}\n                        setCommand={setCommand}\n                        setGeneratedURI={setGeneratedURI}\n                    />\n                    {dockerMap[selectedAction][\"option\"] &&\n                        <div className=\"action-option\">\n                            <input\n                                type=\"text\"\n                                placeholder={dockerMap[selectedAction][\"option\"]}\n                                value={option}\n                                onChange={(e) => setOption(e.target.value)}\n                                className=\"text-input\"\n                            />\n                        </div>\n                    }\n                </>\n            }\n\n            {/* Docker Compose Action Menu */}\n            {selectedDeployment === \"Docker Compose\" &&\n                <>\n                    <Dropdown\n                        selectedAction={selectedAction}\n                        defaultValue={selectedAction}\n                        optionValues={dockerComposeOptions}\n                        map={dockerComposeMap}\n                        option={option}\n                        setOption={setOption}\n                        setSelectedAction={setSelectedAction}\n                        command={setCommand}\n                        setCommand={setCommand}\n                        setGeneratedURI={setGeneratedURI}\n                    />\n\n                    {dockerComposeMap[selectedAction][\"option\"] &&\n                        <div className=\"action-option\">\n                            <input\n                                type=\"text\"\n                                placeholder={dockerComposeMap[selectedAction][\"option\"]}\n                                value={option}\n                                onChange={(e) => setOption(e.target.value)}\n                                className=\"text-input\"\n                            />\n                        </div>\n                    }\n                </>\n            }\n\n            {/* Kubernetes Menu */}\n            {selectedDeployment === \"Kubernetes\" &&\n                <>\n                    <Dropdown\n                        selectedAction={selectedAction}\n                        defaultValue={selectedAction}\n                        optionValues={kubernetesOptions}\n                        map={kubernetesMap}\n                        option={option}\n                        setOption={setOption}\n                        setSelectedAction={setSelectedAction}\n                        setCommand={setCommand}\n                        command={setCommand}\n                        hasNamespace={hasNamespace}\n                        namespace={namespace}\n                        setGeneratedURI={setGeneratedURI}\n                    />\n\n                    {kubernetesMap[selectedAction][\"option\"] &&\n                        <div className=\"action-option\">\n                            <input\n                                type=\"text\"\n                                placeholder={kubernetesMap[selectedAction][\"option\"]}\n                                value={option}\n                                onChange={(e) => setOption(e.target.value)}\n                                className=\"text-input\"\n                            />\n                        </div>\n                    }\n                </>\n            }\n        </div>\n    )\n}","// ANCHOR css\nimport { useEffect } from 'react';\nimport './GenerateLink.css';\n\n\n\nexport default function GenerateLink({\n    deployment,\n    action,\n    namespace,\n    option,\n    generatedURI,\n    setGeneratedURI\n}) {\n    const generateURL = () => {\n        const BASE_URL = (window.location.href).split(\"?\")[0];\n\n        if (generatedURI.length !== 0) {\n            setGeneratedURI(\"\");\n            window.location.href = BASE_URL\n            return;\n        }\n\n        const DEPLOYMENT_PARAM = deployment ? `?deployment=${encodeURIComponent(deployment)}` : \"\";\n        const ACTION_PARAM = action ? `&function=${encodeURIComponent(action)}` : \"\";\n        const NAMESPACE_PARAM = namespace ? `&namespace=${namespace}` : \"\";\n        const OPTION_PARAM = option ? `&option=${option}` : \"\";\n\n        const QUERY_STRING = DEPLOYMENT_PARAM\n            + ACTION_PARAM\n            + NAMESPACE_PARAM\n            + OPTION_PARAM;\n\n        setGeneratedURI(`${BASE_URL}${QUERY_STRING}`);\n    }\n\n    useEffect(() => {\n\n    }, [generatedURI])\n\n    return (\n        <>\n            {action === \"Function\" ? (\n                <button\n                    className=\"generate-btn\"\n                    onClick={generateURL}\n                    disabled\n                >\n                    Generate URL for re-use\n                </button>\n\n            ) : (\n                <button\n                    className=\"generate-btn\"\n                    onClick={generateURL}\n                >\n                    {generatedURI !== \"\" ? (\n                        <>Clear Command</>\n                    ) : (\n                        <>Generate URL for re-use</>\n                    )}\n                </button>\n            )\n            }\n        </>\n    )\n}","// ANCHOR External Modules\nimport { useState, useEffect } from 'react';\n\n// ANCHOR Internal Modules\nimport GenerateLink from './GenerateLink';\n\n// ANCHOR CSS\nimport './GeneratedURI.css';\n\n\n\nexport default function GeneratedURI({\n    selectedDeployment,\n    selectedAction,\n    namespace,\n    option,\n    generatedURI,\n    setGeneratedURI\n}) {\n    const [copiedUrl, setCopiedUrl] = useState(false);\n\n    const copyUrl = () => {\n        navigator.clipboard.writeText(generatedURI)\n        setCopiedUrl(true);\n    }\n\n    useEffect(() => {\n        if (copiedUrl) {\n            setTimeout(() => {\n                setCopiedUrl(false);\n            }, 3000);\n        }\n    }, [copiedUrl, setCopiedUrl])\n\n    return (\n        <div className=\"generated-uri-container\">\n            <input\n                className=\"generated-uri\"\n                type=\"text\"\n                placeholder=\"Generated URL will appear here.\"\n                value={generatedURI}\n                readOnly\n            />\n            <div className=\"copied-url-container\">\n                <p className={`copied-message ${copiedUrl && \"show\"}`}>\n                    URL copied to clipboard\n                </p>\n                <div>\n                    <GenerateLink\n                        deployment={selectedDeployment}\n                        action={selectedAction}\n                        namespace={namespace}\n                        option={option}\n                        setGeneratedURI={setGeneratedURI}\n                        generatedURI={generatedURI}\n                    />\n                    {generatedURI ? (\n                        <button\n                            className=\"copy-url\"\n                            onClick={copyUrl}\n                        >\n                            Copy URL\n                        </button>\n\n                    ) : (\n                        <button\n                            className=\"copy-url\"\n                            onClick={copyUrl}\n                            disabled\n                        >\n                            Copy URL\n                        </button>\n                    )}\n                </div>\n            </div>\n\n        </div>\n    )\n}","// ANCHOR External Modules\nimport { useEffect, useState } from 'react';\n\n// ANCHOR CSS\nimport './Descriptions.css';\n\nexport default function Description({\n    func,\n    info,\n    currentInfoOpen,\n    setCurrentInfoOpen\n}) {\n    const [showInfoOption, setShowInfoOption] = useState(false);\n    const [showDesc, setShowDesc] = useState(false);\n\n    const handleExpand = () => {\n        if (currentInfoOpen !== func) {\n            setCurrentInfoOpen(func);\n            setShowDesc(true)\n        } else {\n            setCurrentInfoOpen(\"Function\")\n            setShowDesc(false)\n        }\n    }\n\n    useEffect(() => { }, [currentInfoOpen])\n\n    return (\n        <>\n            {func !== \"Function\" &&\n                <li\n                    className=\"desc-item\"\n                    onMouseEnter={() => setShowInfoOption(true)}\n                    onMouseLeave={() => setShowInfoOption(false)}\n                    onClick={handleExpand}\n                >\n                    <div className={`row ${currentInfoOpen === func && 'expanded'}`}>\n                        <div>\n                            {func}\n                        </div>\n                        <button\n                            className={`expand ${showInfoOption && \"active\"}`}\n                            onClick={handleExpand}\n                        >\n                            <div>\n                                i&nbsp;\n                            </div>\n                            {(showDesc && currentInfoOpen === func) ? (\n                                <div className=\"rotated\">\n                                    {`<`}\n                                </div>\n                            ) : (\n                                <div className=\"not-rotated\">\n                                    {`<`}\n                                </div>\n                            )}\n                        </button>\n                    </div>\n                    {currentInfoOpen === func &&\n                        <div className=\"command-info\">\n                            <ul className=\"description\">\n                                <li>\n                                    {info.description}\n                                </li>\n                            </ul>\n                        </div>\n                    }\n                </li>\n            }\n        </>\n\n    )\n}","// ANCHOR External Modules \nimport { useState } from 'react';\n\n// ANCHOR Internal Modules\nimport { commands } from '../../utils/commands';\nimport { getOptionValues } from '../../utils/helpers';\nimport Description from './Description';\n\n// ANCHOR CSS\nimport './Descriptions.css';\n\n\n\nexport default function Descriptions({ selectedDeployment }) {\n    const deploymentMap = commands[selectedDeployment];\n    const mapKeys = getOptionValues(deploymentMap);\n    const [currentInfoOpen, setCurrentInfoOpen] = useState(\"Function\");\n    const len = mapKeys.length;\n\n    const generateDescriptions = () => {\n        return mapKeys.map((mapKey, i) => {\n            const vals = deploymentMap[mapKey];\n            return (\n                <Description\n                    key={`desc-${i}`}\n                    func={mapKeys[i]}\n                    info={vals}\n                    currentInfoOpen={currentInfoOpen}\n                    setCurrentInfoOpen={setCurrentInfoOpen}\n                />\n            )\n        })\n    }\n\n    return (\n        <div>\n            <h4 className=\"section right\">Descriptions &nbsp;\n                {len !== 0 &&\n                    <span className=\"instruction\">\n                        (click to expand)\n                    </span>\n                }\n\n            </h4>\n            {len !== 0 ? (\n                <ul className=\"desc-list\">\n                    {generateDescriptions()}\n                </ul>\n            ) : (\n                <div className=\"desc-list placeholder\">\n                    <p>Choose Deployment to list function descriptions.</p>\n                </div>\n            )}\n        </div>\n    )\n}","// ANCHOR CSS\nimport './Or.css';\n\nexport default function Or() {\n    return (\n        <div className=\"or-container\">\n            <div className=\"dash\"></div>\n            <p className=\"or\">or</p>\n            <div className=\"dash\"></div>\n        </div>\n    )\n}","// ANCHOR css\nimport './CopyBtn.css';\n\nexport default function CopyBtn({ selectedAction, copyCommand }) {\n    return (\n        <>\n            {selectedAction === \"Function\" ? (\n                <button\n                    className=\"copy-button\"\n                    onClick={copyCommand}\n                    disabled\n                >\n                    Copy Command\n                </button>\n            ) : (\n                <button\n                    className=\"copy-button\"\n                    onClick={copyCommand}\n                >\n                    Copy Command\n                </button>\n            )}\n        </>\n    )\n}","import { useState, useEffect } from 'react';\n\nimport CopyBtn from '../UI/CopyBtn';\n\nimport './GeneratedCommand.css';\n\nexport default function GeneratedCommand({\n    selectedDeployment,\n    selectedAction,\n    command,\n}) {\n\n    const [commandCopied, setCommandCopied] = useState(false);\n\n    const copyCommand = () => {\n        navigator.clipboard.writeText(command);\n        setCommandCopied(true);\n    }\n\n    useEffect(() => {\n        if (commandCopied) {\n            setTimeout(() => {\n                setCommandCopied(false);\n            }, 3000);\n        }\n    }, [commandCopied, setCommandCopied]);\n\n    return (\n        <div className=\"generated-command-container\">\n            <div className=\"generated-command\">\n                {selectedDeployment === 'select-deployment' ? (\n                    <>\n                        [SELECT DEPLOYMENT TYPE and FUNCTION]\n                    </>\n                ) : (\n                    <>\n                        {command}\n                    </>\n                )}\n            </div>\n            <div className=\"btns-container\">\n                <p className={`copied-message ${commandCopied && \"show\"}`}>\n                    Command copied to clipboard.\n                </p>\n                <CopyBtn\n                    selectedAction={selectedAction}\n                    copyCommand={copyCommand}\n                />\n            </div>\n        </div >\n    )\n}","// ANCHOR External Modules\nimport { useState } from 'react'\n\n// ANCHOR Internal Modules\nimport Deployment from './Components/Deployment/Deployment';\nimport Action from './Components/Action/Action';\nimport GeneratedURI from './Components/UI/GeneratedURI';\n\n// ANCHOR CSS\nimport './App.css';\nimport Descriptions from './Components/Descriptions/Descriptions';\nimport Or from './Components/UI/Or';\nimport GeneratedCommand from './Components/Command/GeneratedCommand';\n\n\n\nfunction App() {\n\tconst queryParams = new URLSearchParams(window.location.search);\n\n\tconst deployment = queryParams.get('deployment');\n\tconst action = queryParams.get('function');\n\tconst nSpace = queryParams.get('namespace');\n\tconst opt = queryParams.get('option');\n\n\tconst [selectedDeployment, setSelectedDeployment] = useState(deployment || \"select-deployment\");\n\tconst [selectedAction, setSelectedAction] = useState(action || \"Function\")\n\tconst [namespace, setNamespace] = useState(nSpace || \"\");\n\tconst [hasNamespace, setHasNamespace] = useState(nSpace ? true : false);\n\tconst [option, setOption] = useState(opt || \"\");\n\tconst [command, setCommand] = useState(\"\");\n\tconst [generatedURI, setGeneratedURI] = useState(\"\");\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<img\n\t\t\t\talt=\"sourcegraph-logo\"\n\t\t\t\tsrc=\"https://github.com/sourcegraph/support-generator/blob/main/public/images/Sourcegraph_Logo_FullColor_light.png?raw=true\"\n\t\t\t\tclassName=\"logo\"\n\t\t\t/>\n\t\t\t<h2 className=\"subtitle\">Command Line Generator</h2>\n\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"actions\">\n\n\t\t\t\t\t{/* USER selects their deployment */}\n\t\t\t\t\t<div className=\"deploy-container\">\n\t\t\t\t\t\t<Deployment\n\t\t\t\t\t\t\tselectedDeployment={selectedDeployment}\n\t\t\t\t\t\t\tsetSelectedDeployment={setSelectedDeployment}\n\t\t\t\t\t\t\tsetSelectedAction={setSelectedAction}\n\t\t\t\t\t\t\thasNamespace={hasNamespace}\n\t\t\t\t\t\t\tsetHasNamespace={setHasNamespace}\n\t\t\t\t\t\t\tnamespace={namespace}\n\t\t\t\t\t\t\tsetNamespace={setNamespace}\n\t\t\t\t\t\t\tsetCommand={setCommand}\n\t\t\t\t\t\t\tsetOption={setOption}\n\t\t\t\t\t\t\tsetGeneratedURI={setGeneratedURI}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{/* USER selects the action they want to take */}\n\t\t\t\t\t\t<Action\n\t\t\t\t\t\t\tselectedDeployment={selectedDeployment}\n\t\t\t\t\t\t\tselectedAction={selectedAction}\n\t\t\t\t\t\t\tsetSelectedAction={setSelectedAction}\n\t\t\t\t\t\t\toption={option}\n\t\t\t\t\t\t\tsetOption={setOption}\n\t\t\t\t\t\t\tcommand={command}\n\t\t\t\t\t\t\tsetCommand={setCommand}\n\t\t\t\t\t\t\thasNamespace={hasNamespace}\n\t\t\t\t\t\t\tnamespace={namespace}\n\t\t\t\t\t\t\tsetGeneratedURI={setGeneratedURI}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"line-break\">\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"descriptions-container\">\n\t\t\t\t\t{/* <Descriptions\n\t\t\t\t\t\tselectedDeployment={selectedDeployment}\n\t\t\t\t\t/> */}\n\t\t\t\t\t<Descriptions\n\t\t\t\t\t\tselectedDeployment={selectedDeployment}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\n\n\t\t\t{/* Command generated from the first two options. */}\n\t\t\t<div className=\"user-options-container\">\n\t\t\t\t<GeneratedCommand\n\t\t\t\t\tselectedDeployment={selectedDeployment}\n\t\t\t\t\tselectedAction={selectedAction}\n\t\t\t\t\tcommand={command}\n\t\t\t\t\tnamespace={namespace}\n\t\t\t\t\toption={option}\n\t\t\t\t\tsetGeneratedURI={setGeneratedURI}\n\t\t\t\t/>\n\n\t\t\t\t{/* divider */}\n\t\t\t\t<Or />\n\n\t\t\t\t{/* URI Generated so that user can revisit with the same options selected */}\n\t\t\t\t<GeneratedURI\n\t\t\t\t\tselectedDeployment={selectedDeployment}\n\t\t\t\t\tselectedAction={selectedAction}\n\t\t\t\t\tnamespace={namespace}\n\t\t\t\t\toption={option}\n\t\t\t\t\tgeneratedURI={generatedURI}\n\t\t\t\t\tsetGeneratedURI={setGeneratedURI}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}