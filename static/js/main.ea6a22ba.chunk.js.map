{"version":3,"sources":["recoil/atoms.js","Components/Deployment/Deployment.jsx","Components/UI/DropdownOption.jsx","Components/UI/Dropdown.jsx","utils/commands.js","utils/helpers.js","Components/Action/Action.jsx","Components/UI/GenerateLink.jsx","Components/UI/GeneratedURI.jsx","Components/Descriptions/Description.jsx","Components/Descriptions/Descriptions.jsx","Components/UI/Or.jsx","Components/UI/CopyBtn.jsx","Components/Command/GeneratedCommand.jsx","images/Sourcegraph_Logo_FullColor_dark.png","images/Sourcegraph_Logo_FullColor_light.png","App.jsx","reportWebVitals.js","index.js"],"names":["modeState","atom","key","default","Deployment","selectedDeployment","setSelectedDeployment","setSelectedAction","hasNamespace","setHasNamespace","namespace","setNamespace","setOption","setGeneratedURI","mode","className","onChange","e","target","value","type","checked","name","placeholder","DropdownOption","opt","Dropdown","defaultValue","map","optionValues","option","selectedAction","command","setCommand","useEffect","command1","command2","val","i","commands","require","getOptionValues","obj","arr","push","Action","dockerMap","dockerComposeMap","kubernetesMap","dockerOptions","dockerComposeOptions","kubernetesOptions","GenerateLink","deployment","action","generatedURI","generateURL","BASE_URL","window","location","href","split","length","QUERY_STRING","encodeURIComponent","onClick","disabled","GeneratedURI","useState","copiedUrl","setCopiedUrl","copyUrl","navigator","clipboard","writeText","setTimeout","onFocus","select","readOnly","Description","func","info","currentInfoOpen","setCurrentInfoOpen","showInfoOption","setShowInfoOption","showDesc","setShowDesc","handleExpand","onMouseEnter","onMouseLeave","description","Descriptions","deploymentMap","mapKeys","len","mapKey","vals","Or","CopyBtn","copyCommand","GeneratedCommand","commandCopied","setCommandCopied","App","useRecoilState","setMode","queryParams","URLSearchParams","search","get","nSpace","matchMedia","matches","alt","src","logo_dark","logo_light","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea6a22ba.chunk.js","sourcesContent":["import {\n    atom\n} from 'recoil';\n\nconst modeState = atom({\n    key: 'modeState',\n    default: 'light',\n});\n\nexport default modeState;","// ANCHOR CSS\nimport './Deployment.css';\n\nexport default function Deployment({\n    selectedDeployment,\n    setSelectedDeployment,\n    setSelectedAction,\n    hasNamespace,\n    setHasNamespace,\n    namespace,\n    setNamespace,\n    setOption,\n    setGeneratedURI,\n    mode\n}) {\n    return (\n        <div className=\"deployment-container\">\n\n            <div className=\"deployment-type\">\n                <h4 className={`section ${mode === \"dark\" ? \"dark\" : \"light\"}`}>Select deployment</h4>\n                <select\n                    onChange={(e) => {\n                        setSelectedDeployment(e.target.value)\n                        setNamespace(\"\")\n                        setHasNamespace(false)\n                        setSelectedAction(\"Function\")\n                        setOption(\"\");\n                        setGeneratedURI(\"\")\n                    }}\n                    value={selectedDeployment}\n                    className={`dropdown-menu ${mode === \"dark\" ? \"dark\" : \"light\"}`}\n                >\n                    <option value=\"select-deployment\">Select Your Deployment Type...</option>\n                    <option value=\"Docker\">Docker</option>\n                    <option value=\"Docker Compose\">Docker Compose</option>\n                    <option value=\"Kubernetes\">Kubernetes</option>\n                </select>\n            </div>\n\n            {selectedDeployment === \"Kubernetes\" &&\n                <div>\n                    <div className=\"namespace-check\">\n                        {hasNamespace ? (\n                            <input\n                                type=\"checkbox\"\n                                value={hasNamespace}\n                                onChange={() => setHasNamespace(!hasNamespace)}\n                                checked\n                            />\n                        ) : (\n                            <input\n                                type=\"checkbox\"\n                                value={hasNamespace}\n                                onChange={() => setHasNamespace(!hasNamespace)}\n                            />\n                        )}\n\n                        <label className={`namespace-label ${mode === \"dark\" ? \"dark\" : \"light\"}`} name=\"namespace\">I am using a namespace.</label>\n                    </div>\n\n                    {hasNamespace &&\n                        <div className=\"namespace-input\">\n                            <input\n                                type=\"text\"\n                                placeholder=\"$NAMESPACE\"\n                                value={namespace}\n                                onChange={(e) => setNamespace(e.target.value)}\n                                className={`text-input ${mode === \"dark\" ? \"dark\" : \"light\"}`}\n                            />\n                        </div>\n                    }\n                </div>\n            }\n        </div>\n    )\n}","export default function DropdownOption({value, opt}) {\n    return (\n        <option \n            value={value}\n            opt={opt}\n        >\n            {value}\n        </option>\n    )\n}","// ANCHOR External Modules\nimport { useEffect } from 'react';\n\n// ANCHOR Internal Modules\nimport DropdownOption from './DropdownOption';\n\nexport default function Dropdown({\n    defaultValue,\n    map,\n    optionValues,\n    option,\n    setOption,\n    selectedDeployment,\n    setSelectedAction,\n    selectedAction,\n    command,\n    setCommand,\n    hasNamespace,\n    namespace,\n    setGeneratedURI,\n    mode\n}) {\n    function generateOptions() {\n        return optionValues.map((val, i) => {\n            return (\n                <DropdownOption\n                    key={`option-${i}`}\n                    value={val}\n                    opt={map[val][\"option\"] || null}\n                />\n            )\n        })\n    }\n\n    useEffect(() => {\n        const command1 = map[selectedAction][\"command\"];\n        const command2 = map[selectedAction][\"command2\"]\n            ? map[selectedAction][\"command2\"]\n            : null;\n\n        if (hasNamespace && option === \"\") {\n            setCommand(`${command1} -n ${namespace} ${command2 ? command2 : \"\"}`);\n        } else if (hasNamespace && option !== \"\") {\n            setCommand(`${command1} ${option} -n ${namespace} ${command2 ? command2 : \"\"}`);\n        } else if (!hasNamespace && option !== \"\") {\n            setCommand(`${command1} ${option} ${command2 ? command2 : \"\"}`);\n        } else {\n            setCommand(`${command1} ${command2 ? command2 : \"\"}`);\n        }\n    }, [\n        setCommand,\n        selectedAction,\n        map,\n        namespace,\n        hasNamespace,\n        option,\n        command\n    ]\n    );\n\n    return (\n        <div className=\"deployment-type\">\n            <h4 className={`section ${mode === 'dark' ? 'dark' : 'light'}`}>Select function</h4>\n            <select\n                onChange={(e) => {\n                    setSelectedAction(e.target.value);\n                    setOption(\"\");\n                    setGeneratedURI(\"\");\n                }}\n                defaultValue={defaultValue}\n                value={selectedDeployment}\n                className={`dropdown-menu ${mode === 'dark' ? 'dark' : 'light'}`}\n            >\n                {optionValues && generateOptions()}\n            </select>\n        </div>\n    )\n}","export const commands = require(\"./commands.json\")","export const getOptionValues = (obj) => {\n    const arr = [];\n    for (let i in obj) {\n        arr.push(i);\n    }\n    return arr;\n}","// ANCHOR Internal Modules\nimport Dropdown from \"../UI/Dropdown\";\nimport { commands } from '../../utils/commands';\nimport { getOptionValues } from '../../utils/helpers';\n\n// ANCHOR CSS\nimport './Action.css';\n\n\n\nexport default function Action({\n    selectedDeployment,\n    selectedAction,\n    setSelectedAction,\n    option,\n    setOption,\n    setCommand,\n    namespace,\n    hasNamespace,\n    setGeneratedURI,\n    mode\n}) {\n    const dockerMap = commands[\"Docker\"];\n    const dockerComposeMap = commands[\"Docker Compose\"];\n    const kubernetesMap = commands[\"Kubernetes\"];\n    const dockerOptions = getOptionValues(dockerMap);\n    const dockerComposeOptions = getOptionValues(dockerComposeMap);\n    const kubernetesOptions = getOptionValues(kubernetesMap);\n\n    return (\n        <div className=\"actions-container\">\n\n            {/* Docker Action Menu */}\n            {selectedDeployment === \"Docker\" &&\n                <>\n                    <Dropdown\n                        selectedAction={selectedAction}\n                        defaultValue={selectedAction}\n                        optionValues={dockerOptions}\n                        option={option}\n                        setOption={setOption}\n                        map={dockerMap}\n                        setSelectedAction={setSelectedAction}\n                        command={setCommand}\n                        setCommand={setCommand}\n                        setGeneratedURI={setGeneratedURI}\n                        mode={mode}\n                    />\n                    {dockerMap[selectedAction][\"option\"] &&\n                        <div className=\"action-option\">\n                            <input\n                                type=\"text\"\n                                placeholder={dockerMap[selectedAction][\"option\"]}\n                                value={option}\n                                onChange={(e) => setOption(e.target.value)}\n                                className=\"text-input\"\n                            />\n                        </div>\n                    }\n                </>\n            }\n\n            {/* Docker Compose Action Menu */}\n            {selectedDeployment === \"Docker Compose\" &&\n                <>\n                    <Dropdown\n                        selectedAction={selectedAction}\n                        defaultValue={selectedAction}\n                        optionValues={dockerComposeOptions}\n                        map={dockerComposeMap}\n                        option={option}\n                        setOption={setOption}\n                        setSelectedAction={setSelectedAction}\n                        command={setCommand}\n                        setCommand={setCommand}\n                        setGeneratedURI={setGeneratedURI}\n                        mode={mode}\n                    />\n\n                    {dockerComposeMap[selectedAction][\"option\"] &&\n                        <div className=\"action-option\">\n                            <input\n                                type=\"text\"\n                                placeholder={dockerComposeMap[selectedAction][\"option\"]}\n                                value={option}\n                                onChange={(e) => setOption(e.target.value)}\n                                className=\"text-input\"\n                            />\n                        </div>\n                    }\n                </>\n            }\n\n            {/* Kubernetes Menu */}\n            {selectedDeployment === \"Kubernetes\" &&\n                <>\n                    <Dropdown\n                        selectedAction={selectedAction}\n                        defaultValue={selectedAction}\n                        optionValues={kubernetesOptions}\n                        map={kubernetesMap}\n                        option={option}\n                        setOption={setOption}\n                        setSelectedAction={setSelectedAction}\n                        setCommand={setCommand}\n                        command={setCommand}\n                        hasNamespace={hasNamespace}\n                        namespace={namespace}\n                        setGeneratedURI={setGeneratedURI}\n                        mode={mode}\n                    />\n\n                    {kubernetesMap[selectedAction][\"option\"] &&\n                        <div className=\"action-option\">\n                            <input\n                                type=\"text\"\n                                placeholder={kubernetesMap[selectedAction][\"option\"]}\n                                value={option}\n                                onChange={(e) => setOption(e.target.value)}\n                                className={`text-input ${mode === 'dark' ? 'dark' : 'light'}`}\n                            />\n                        </div>\n                    }\n                </>\n            }\n        </div>\n    )\n}","// ANCHOR css\nimport { useEffect } from 'react';\nimport './GenerateLink.css';\n\n\n\nexport default function GenerateLink({\n    deployment,\n    action,\n    namespace,\n    option,\n    generatedURI,\n    setGeneratedURI,\n    mode\n}) {\n    const generateURL = () => {\n        const BASE_URL = (window.location.href).split(\"?\")[0];\n\n        if (generatedURI.length !== 0) {\n            setGeneratedURI(\"\");\n            window.location.href = BASE_URL\n            return;\n        }\n\n        const DEPLOYMENT_PARAM = deployment ? `?deployment=${encodeURIComponent(deployment)}` : \"\";\n        const ACTION_PARAM = action ? `&function=${encodeURIComponent(action)}` : \"\";\n        const NAMESPACE_PARAM = namespace ? `&namespace=${namespace}` : \"\";\n        const OPTION_PARAM = option ? `&option=${option}` : \"\";\n\n        const QUERY_STRING = DEPLOYMENT_PARAM\n            + ACTION_PARAM\n            + NAMESPACE_PARAM\n            + OPTION_PARAM;\n\n        setGeneratedURI(`${BASE_URL}${QUERY_STRING}`);\n    }\n\n    useEffect(() => {\n\n    }, [generatedURI])\n\n    return (\n        <>\n            {action === \"Function\" ? (\n                <button\n                    className={`btn ${mode === \"dark\" ? \"dark\" : \"light\"}`}\n                    onClick={generateURL}\n                    disabled\n                >\n                    Generate URL\n                </button>\n\n            ) : (\n                <button\n                    className={`btn ${mode === \"dark\" ? \"dark\" : \"light\"}`}\n                    onClick={generateURL}\n                >\n                    {generatedURI !== \"\" ? (\n                        <>Clear Command</>\n                    ) : (\n                        <>Generate URL</>\n                    )}\n                </button>\n            )\n            }\n        </>\n    )\n}","// ANCHOR External Modules\nimport { useState, useEffect } from 'react';\n\n// ANCHOR Internal Modules\nimport GenerateLink from './GenerateLink';\n\n// ANCHOR CSS\nimport './GeneratedURI.css';\n\n\n\nexport default function GeneratedURI({\n    selectedDeployment,\n    selectedAction,\n    namespace,\n    option,\n    generatedURI,\n    setGeneratedURI,\n    mode\n}) {\n    const [copiedUrl, setCopiedUrl] = useState(false);\n\n    const copyUrl = () => {\n        navigator.clipboard.writeText(generatedURI)\n        setCopiedUrl(true);\n    }\n\n    const handleFocus = (e) => {\n        e.target.select();\n    }\n\n    useEffect(() => {\n        if (copiedUrl) {\n            setTimeout(() => {\n                setCopiedUrl(false);\n            }, 3000);\n        }\n    }, [copiedUrl, setCopiedUrl])\n\n    return (\n        <div className=\"generated-uri-container\">\n            <input\n                className={`generated-uri ${mode === 'dark' ? 'dark' : 'light'}`}\n                type=\"text\"\n                placeholder=\"Generated URL will appear here.\"\n                value={generatedURI}\n                onFocus={handleFocus}\n                readOnly\n            />\n            <div className=\"copied-url-container\">\n                <p className={`copied-message ${copiedUrl && \"show\"} ${mode === \"dark\" ? \"dark\" : \"light\"}`}>\n                    URL copied to clipboard\n                </p>\n                <div className=\"btns-container-2\">\n                    <GenerateLink\n                        deployment={selectedDeployment}\n                        action={selectedAction}\n                        namespace={namespace}\n                        option={option}\n                        setGeneratedURI={setGeneratedURI}\n                        generatedURI={generatedURI}\n                        mode={mode}\n                    />\n                    {generatedURI ? (\n                        <button\n                            className={`btn w-margin ${mode === \"dark\" ? \"dark\" : \"light\"}`}\n                            onClick={copyUrl}\n                        >\n                            Copy URL\n                        </button>\n\n                    ) : (\n                        <button\n                            className={`btn w-margin ${mode === \"dark\" ? \"dark\" : \"light\"}`}\n                            onClick={copyUrl}\n                            disabled\n                        >\n                            Copy URL\n                        </button>\n                    )}\n                </div>\n            </div>\n\n        </div>\n    )\n}","// ANCHOR External Modules\nimport { useEffect, useState } from 'react';\n\n// ANCHOR CSS\nimport './Descriptions.css';\n\nexport default function Description({\n    func,\n    info,\n    currentInfoOpen,\n    setCurrentInfoOpen,\n    mode\n}) {\n    const [showInfoOption, setShowInfoOption] = useState(false);\n    const [showDesc, setShowDesc] = useState(false);\n\n    const handleExpand = () => {\n        if (currentInfoOpen !== func) {\n            setCurrentInfoOpen(func);\n            setShowDesc(true)\n        } else {\n            setCurrentInfoOpen(\"Function\")\n            setShowDesc(false)\n        }\n    }\n\n    useEffect(() => { }, [currentInfoOpen])\n\n    return (\n        <>\n            {func !== \"Function\" &&\n                <div\n                    className={`desc-item ${mode === 'dark' ? 'dark' : 'light'}`}\n                    onMouseEnter={() => setShowInfoOption(true)}\n                    onMouseLeave={() => setShowInfoOption(false)}\n                    onClick={handleExpand}\n                >\n                    <div className={`row ${currentInfoOpen === func && 'expanded'} ${mode === \"dark\" ? \"dark\" : \"light\"}`} >\n                        <div>\n                            {func}\n                        </div>\n                        <button\n                            className={`expand ${showInfoOption && \"active\"} ${mode === \"dark\" ? \"dark\" : \"light\"}`}\n                            onClick={handleExpand}\n                        >\n                            <div>\n                                i&nbsp;\n                            </div>\n                            {(showDesc && currentInfoOpen === func) ? (\n                                <div className=\"rotated\">\n                                    {`<`}\n                                </div>\n                            ) : (\n                                <div className=\"not-rotated\">\n                                    {`<`}\n                                </div>\n                            )}\n                        </button>\n                    </div>\n                    {currentInfoOpen === func &&\n                        <div className={`command-info ${mode === 'dark' ? 'dark' : 'light'}`}>\n                            <ul className={`description ${mode === 'dark' && 'dark'}`}>\n                                <li>\n                                    {info.description}\n                                </li>\n                            </ul>\n                        </div>\n                    }\n                </div>\n            }\n        </>\n\n    )\n}","// ANCHOR External Modules \nimport { useState } from 'react';\n\n// ANCHOR Internal Modules\nimport { commands } from '../../utils/commands';\nimport { getOptionValues } from '../../utils/helpers';\nimport Description from './Description';\n\n// ANCHOR CSS\nimport './Descriptions.css';\n\n\n\nexport default function Descriptions({ selectedDeployment, mode }) {\n    const deploymentMap = commands[selectedDeployment];\n    const mapKeys = getOptionValues(deploymentMap);\n    const [currentInfoOpen, setCurrentInfoOpen] = useState(\"Function\");\n    const len = mapKeys.length;\n\n    const generateDescriptions = () => {\n        return mapKeys.map((mapKey, i) => {\n            const vals = deploymentMap[mapKey];\n            return (\n                <Description\n                    key={`desc-${i}`}\n                    func={mapKeys[i]}\n                    info={vals}\n                    currentInfoOpen={currentInfoOpen}\n                    setCurrentInfoOpen={setCurrentInfoOpen}\n                    mode={mode}\n                />\n            )\n        })\n    }\n\n    return (\n        <div>\n            <h4 className={`section ${mode === 'dark' ? 'dark' : 'light'}`}>Function Descriptions &nbsp;\n                {len !== 0 &&\n                    <span className=\"instruction\">\n                        - &nbsp;click to expand\n                    </span>\n                }\n\n            </h4>\n            {len !== 0 ? (\n                <div className=\"desc-list\">\n                    {generateDescriptions()}\n                </div>\n            ) : (\n                <div className={`desc-list placeholder ${mode === 'dark' ? 'dark' : 'light'}`}>\n                    <p>Choose Deployment to list function descriptions.</p>\n                </div>\n            )}\n        </div>\n    )\n}","// ANCHOR CSS\nimport './Or.css';\n\nexport default function Or() {\n    return (\n        <div className=\"or-container\">\n            <div className=\"dash\"></div>\n            <p className=\"or\">or</p>\n            <div className=\"dash\"></div>\n        </div>\n    )\n}","// ANCHOR css\nimport './CopyBtn.css';\n\nexport default function CopyBtn({ selectedAction, copyCommand, mode }) {\n    return (\n        <>\n            {selectedAction === \"Function\" ? (\n                <button\n                    className={`btn ${mode === \"dark\" ? \"dark\" : \"light\"}`}\n                    onClick={copyCommand}\n                    disabled\n                >\n                    Copy Command\n                </button>\n            ) : (\n                <button\n                    className={`btn ${mode === \"dark\" ? \"dark\" : \"light\"}`}\n                    onClick={copyCommand}\n                >\n                    Copy Command\n                </button>\n            )}\n        </>\n    )\n}","import { useState, useEffect } from 'react';\n\nimport CopyBtn from '../UI/CopyBtn';\n\nimport './GeneratedCommand.css';\n\nexport default function GeneratedCommand({\n    selectedDeployment,\n    selectedAction,\n    command,\n    mode\n}) {\n\n    const [commandCopied, setCommandCopied] = useState(false);\n\n    const copyCommand = () => {\n        navigator.clipboard.writeText(command);\n        setCommandCopied(true);\n    }\n\n    useEffect(() => {\n        if (commandCopied) {\n            setTimeout(() => {\n                setCommandCopied(false);\n            }, 3000);\n        }\n    }, [commandCopied, setCommandCopied]);\n\n    return (\n        <div className=\"generated-command-container\">\n            <div className={`generated-command ${mode === \"dark\" ? \"dark\" : \"light\"}`}>\n                {selectedDeployment === 'select-deployment' ? (\n                    <>\n                        [SELECT DEPLOYMENT TYPE and FUNCTION]\n                    </>\n                ) : (\n                    <>\n                        {command}\n                    </>\n                )}\n            </div>\n            <div className=\"btns-container\">\n                <p className={`copied-message ${commandCopied && \"show\"} ${mode === \"dark\" ? \"dark\" : \"light\"}`}>\n                    Command copied to clipboard.\n                </p>\n                <CopyBtn\n                    selectedAction={selectedAction}\n                    copyCommand={copyCommand}\n                    mode={mode}\n                />\n            </div>\n        </div >\n    )\n}","export default __webpack_public_path__ + \"static/media/Sourcegraph_Logo_FullColor_dark.ad85e056.png\";","export default __webpack_public_path__ + \"static/media/Sourcegraph_Logo_FullColor_light.66076257.png\";","// ANCHOR External Modules\nimport { useEffect, useState } from 'react';\nimport { useRecoilState } from 'recoil';\n\n// ANCHOR Internal Modules\nimport modeState from './recoil/atoms';\nimport Deployment from './Components/Deployment/Deployment';\nimport Action from './Components/Action/Action';\nimport GeneratedURI from './Components/UI/GeneratedURI';\nimport Descriptions from './Components/Descriptions/Descriptions';\nimport Or from './Components/UI/Or';\nimport GeneratedCommand from './Components/Command/GeneratedCommand';\n\n// ANCHOR Images\nimport logo_dark from './images/Sourcegraph_Logo_FullColor_dark.png';\nimport logo_light from './images/Sourcegraph_Logo_FullColor_light.png';\n\n// ANCHOR CSS\nimport './App.css';\n\n\n\n\nfunction App() {\n\t// determine user preference for dark or light mode.\n\tconst [mode, setMode] = useRecoilState(modeState)\n\n\t// Use search params if present in URL\n\tconst queryParams = new URLSearchParams(window.location.search);\n\tconst deployment = queryParams.get('deployment');\n\tconst action = queryParams.get('function');\n\tconst nSpace = queryParams.get('namespace');\n\tconst opt = queryParams.get('option');\n\n\t// States\n\tconst [selectedDeployment, setSelectedDeployment] = useState(deployment || \"select-deployment\");\n\tconst [selectedAction, setSelectedAction] = useState(action || \"Function\")\n\tconst [namespace, setNamespace] = useState(nSpace || \"\");\n\tconst [hasNamespace, setHasNamespace] = useState(nSpace ? true : false);\n\tconst [option, setOption] = useState(opt || \"\");\n\tconst [command, setCommand] = useState(\"\");\n\tconst [generatedURI, setGeneratedURI] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tif (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n\t\t\tsetMode('dark');\n\t\t}\n\t}, [mode, setMode])\n\n\treturn (\n\t\t<div className={`App ${mode === 'dark' && \"dark\"}`}>\n\t\t\t<img\n\t\t\t\talt={`sourcegraph-logo ${mode === \"dark\" ? \"dark\" : \"light\"}`}\n\t\t\t\tsrc={mode === 'dark'\n\t\t\t\t\t? logo_dark\n\t\t\t\t\t: logo_light}\n\t\t\t\tclassName=\"logo\"\n\t\t\t/>\n\t\t\t{mode === \"dark\" ? (\n\t\t\t\t<h2 className=\"subtitle dark\">command line generator</h2>\n\t\t\t) : (\n\t\t\t\t<h2 className=\"subtitle\">Command Line Generator</h2>\n\t\t\t)}\n\n\n\t\t\t<div className=\"container\">\n\t\t\t\t{/* <div className=\"actions\"> */}\n\n\t\t\t\t{/* USER selects their deployment */}\n\t\t\t\t<div className=\"deploy-container\">\n\t\t\t\t\t<Deployment\n\t\t\t\t\t\tselectedDeployment={selectedDeployment}\n\t\t\t\t\t\tsetSelectedDeployment={setSelectedDeployment}\n\t\t\t\t\t\tsetSelectedAction={setSelectedAction}\n\t\t\t\t\t\thasNamespace={hasNamespace}\n\t\t\t\t\t\tsetHasNamespace={setHasNamespace}\n\t\t\t\t\t\tnamespace={namespace}\n\t\t\t\t\t\tsetNamespace={setNamespace}\n\t\t\t\t\t\tsetCommand={setCommand}\n\t\t\t\t\t\tsetOption={setOption}\n\t\t\t\t\t\tsetGeneratedURI={setGeneratedURI}\n\t\t\t\t\t\tmode={mode}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{/* USER selects the action they want to take */}\n\t\t\t\t\t<Action\n\t\t\t\t\t\tselectedDeployment={selectedDeployment}\n\t\t\t\t\t\tselectedAction={selectedAction}\n\t\t\t\t\t\tsetSelectedAction={setSelectedAction}\n\t\t\t\t\t\toption={option}\n\t\t\t\t\t\tsetOption={setOption}\n\t\t\t\t\t\tcommand={command}\n\t\t\t\t\t\tsetCommand={setCommand}\n\t\t\t\t\t\thasNamespace={hasNamespace}\n\t\t\t\t\t\tnamespace={namespace}\n\t\t\t\t\t\tsetGeneratedURI={setGeneratedURI}\n\t\t\t\t\t\tmode={mode}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t{/* </div> */}\n\n\t\t\t\t<div className=\"line-break\">\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"descriptions-container\">\n\t\t\t\t\t{/* <Descriptions\n\t\t\t\t\t\tselectedDeployment={selectedDeployment}\n\t\t\t\t\t/> */}\n\t\t\t\t\t<Descriptions\n\t\t\t\t\t\tselectedDeployment={selectedDeployment}\n\t\t\t\t\t\tmode={mode}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\n\n\t\t\t{/* Command generated from the first two options. */}\n\t\t\t<div className=\"user-options-container\">\n\t\t\t\t<GeneratedCommand\n\t\t\t\t\tselectedDeployment={selectedDeployment}\n\t\t\t\t\tselectedAction={selectedAction}\n\t\t\t\t\tcommand={command}\n\t\t\t\t\tnamespace={namespace}\n\t\t\t\t\toption={option}\n\t\t\t\t\tsetGeneratedURI={setGeneratedURI}\n\t\t\t\t\tmode={mode}\n\t\t\t\t/>\n\n\t\t\t\t{/* divider */}\n\t\t\t\t<Or />\n\n\t\t\t\t{/* URI Generated so that user can revisit with the same options selected */}\n\t\t\t\t<GeneratedURI\n\t\t\t\t\tselectedDeployment={selectedDeployment}\n\t\t\t\t\tselectedAction={selectedAction}\n\t\t\t\t\tnamespace={namespace}\n\t\t\t\t\toption={option}\n\t\t\t\t\tgeneratedURI={generatedURI}\n\t\t\t\t\tsetGeneratedURI={setGeneratedURI}\n\t\t\t\t\tmode={mode}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { RecoilRoot } from 'recoil';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}