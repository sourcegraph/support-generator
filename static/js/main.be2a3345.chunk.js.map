{"version":3,"sources":["Components/Deployment/Deployment.jsx","Components/UI/DropdownOption.jsx","Components/UI/Dropdown.jsx","utils/commands.js","utils/helpers.js","Components/Action/Action.jsx","Components/Command/Command.jsx","Components/Descriptions/Description.jsx","Components/Descriptions/Descriptions.jsx","App.js","reportWebVitals.js","index.js"],"names":["Deployment","selectedDeployment","setSelectedDeployment","setSelectedAction","hasNamespace","setHasNamespace","namespace","setNamespace","useParams","deployment","namespaceParam","history","useHistory","className","onChange","e","push","target","value","defaultValue","type","name","placeholder","autoFocus","DropdownOption","opt","Dropdown","map","optionValues","option","setOption","selectedAction","command","setCommand","useEffect","command1","command2","encoded","encodeURIComponent","val","i","commands","require","getOptionValues","obj","arr","Action","mapCommands","listActions","action","podParam","decodeURIComponent","console","log","Command","useState","copy","setCopy","onClick","navigator","clipboard","writeText","disabled","Description","key","func","info","currentInfoOpen","setCurrentInfoOpen","showInfoOption","setShowInfoOption","showDesc","setShowDesc","handleExpand","onMouseEnter","onMouseLeave","description","Descriptions","deploymentMap","mapKeys","mapKey","vals","App","alt","src","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be2a3345.chunk.js","sourcesContent":["import { useParams, useHistory } from 'react-router';\n// ANCHOR CSS\nimport './Deployment.css';\n\nexport default function Deployment({\n    selectedDeployment, \n    setSelectedDeployment,\n    setSelectedAction,\n    hasNamespace,\n    setHasNamespace, \n    namespace, \n    setNamespace,\n}) {\n    let {deployment, namespaceParam} = useParams();\n    let history = useHistory();\n    if(deployment===\"Docker\" || deployment===\"docker\") setSelectedDeployment(\"Docker\")\n    if(deployment===\"Docker Compose\" || deployment===\"dc\") setSelectedDeployment(\"Docker Compose\")\n    if(deployment===\"Kubernetes\" || deployment===\"k8s\") setSelectedDeployment(\"Kubernetes\")\n    if(namespaceParam) {\n        setHasNamespace(true);\n        setNamespace(namespaceParam);\n    }\n\n    return (\n        <div className=\"deployment-container\">\n            \n            <div className=\"deployment-type\">\n                <h4 className=\"section\">Select deployment:</h4>\n                <select \n                    onChange={(e) => {\n                        history.push(`/${e.target.value}`);\n                        setSelectedDeployment(e.target.value)\n                        setNamespace(\"\")\n                        setHasNamespace(false)\n                        setSelectedAction(\"Get Logs\")\n                    }} \n                    defaultValue={selectedDeployment}\n                    value={selectedDeployment}\n                    className=\"dropdown-menu\"\n                >\n                    <option value=\"Docker\">Docker</option>\n                    <option value=\"Docker Compose\">Docker Compose</option>\n                    <option value=\"Kubernetes\">Kubernetes</option>\n                </select>\n            </div>\n            \n            {selectedDeployment === \"Kubernetes\" && \n                <div>\n                    <div className=\"namespace-check\">\n                        <input \n                            type=\"checkbox\" \n                            value={hasNamespace}\n                            onChange={() => setHasNamespace(!hasNamespace)}\n                        ></input>  \n                        <label className=\"namespace-label\" name=\"namespace\">I am using a namespace.</label>\n                    </div>\n                    \n                    {hasNamespace &&\n                        <div className=\"namespace-input\">\n                            <input \n                                type=\"text\"\n                                placeholder=\"$NAMESPACE\"\n                                value={namespace}\n                                onChange={(e) => setNamespace(e.target.value)}\n                                className=\"text-input\"\n                                autoFocus\n                            ></input>\n                        </div>\n                    }\n                </div>\n            } \n        </div>\n    )\n}","export default function DropdownOption({value, opt}) {\n    return (\n        <option \n            value={value}\n            opt={opt}\n        >\n            {value}\n        </option>\n    )\n}","// ANCHOR External Modules\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router';\n\n// ANCHOR Internal Modules\nimport DropdownOption from './DropdownOption';\n\nexport default function Dropdown({\n    defaultValue, \n    map,\n    optionValues, \n    option,\n    setOption,\n    deployment,\n    selectedDeployment,\n    setSelectedAction,\n    selectedAction,\n    command,\n    setCommand,\n    hasNamespace,\n    namespace\n}) {\n    function generateOptions() {\n        return optionValues.map((val, i) => {\n            return (\n                <DropdownOption \n                    key={`option-${i}`}\n                    value={val}\n                    opt={map[val][\"option\"] || null}\n                />\n            )\n        })\n    }\n    let history = useHistory();\n    useEffect(() => {\n        if(map[selectedAction]){\n            !option && setOption(map[selectedAction][\"option\"]);\n            const command1 = map[selectedAction][\"command\"];\n            const command2 = map[selectedAction][\"command2\"]\n                ? map[selectedAction][\"command2\"]\n                : null;\n\n            if (hasNamespace) {\n                setCommand(`${command1} ${option} -n ${namespace} ${command2 ? command2 : \"\"}`);\n            } else {\n                setCommand(`${command1} ${option} ${command2 ? command2 : \"\"}`);\n            }\n        }\n    }, [\n        setOption,\n        setCommand, \n        selectedAction, \n        setOption,\n        map, \n        namespace, \n        hasNamespace, \n        option, \n        command\n        ]\n    );\n\n    return (\n        <div className=\"deployment-type\">\n            <h4 className=\"section\">Select action to take:</h4>\n            <select \n                onChange={(e) => {\n                    let encoded = encodeURIComponent(e.target.value)\n                    setSelectedAction(e.target.value);\n                    history.push(`/${deployment}/${encoded}`);\n                    setOption(\"\");\n                }} \n                defaultValue={defaultValue}\n                value={selectedDeployment}\n                className=\"dropdown-menu\"\n            >\n                {optionValues && generateOptions()}\n            </select>\n        </div>\n    )\n}","export const commands = require(\"./commands.json\")\n","export const getOptionValues = (obj) => {\n    const arr = [];\n    for (let i in obj) {\n        arr.push(i);\n    }\n    return arr;\n}","import { useParams } from 'react-router';\n// ANCHOR Internal Modules\nimport Dropdown from \"../UI/Dropdown\";\nimport { commands } from \"../../utils/commands\";\nimport { getOptionValues } from \"../../utils/helpers\";\n\n// CSS\nimport \"./Action.css\";\n\n\n\nexport default function Action({\n    selectedDeployment,\n    selectedAction,\n    setSelectedAction,\n    option,\n    setOption,\n    setCommand,\n    namespace,\n    hasNamespace,\n}) {\n    \n    const mapCommands = commands[selectedDeployment];\n    const listActions = getOptionValues(mapCommands);\n    let {deployment, action, podParam} = useParams();\n    !action ? action = selectedAction : action = decodeURIComponent(action);\n    console.log(action)\n    if(podParam) setOption(podParam)\n\n    return (\n        <div className=\"actions-container\">\n            {/* Action Menu */}\n            <>\n                <Dropdown\n                    selectedAction={action}\n                    defaultValue={action}\n                    optionValues={listActions} \n                    deployment={deployment}\n                    map={mapCommands}\n                    option={option}\n                    setOption={setOption}\n                    setSelectedAction={setSelectedAction}\n                    setCommand={setCommand}\n                    command={setCommand}\n                    hasNamespace={hasNamespace}\n                    namespace={namespace}\n                />\n\n                {mapCommands[selectedAction] && mapCommands[selectedAction][\"option\"] &&\n                    <div className=\"action-option\">\n                        <input\n                            type=\"text\"\n                            placeholder={mapCommands[selectedAction][\"option\"]}\n                            value={option}\n                            onChange={(e) => setOption(e.target.value)}\n                            className=\"text-input\"\n                            autoFocus\n                        />\n                    </div>\n                }\n            </>          \n        </div>\n    );\n}\n\n","// ANCHOR External Modules\nimport {useState, useEffect} from 'react'\n\n// ANCHOR CSS\nimport './Command.css';\n\nexport default function Command({\n    selectedDeployment,\n    command,\n}) {\n    const [copy, setCopy] = useState(\"Copy\")\n\n    useEffect(() => {\n        setCopy(\"Copy\");\n    }, [command, selectedDeployment])\n\n    const copyCommand = () => {\n        navigator.clipboard.writeText(command);\n        setCopy(\"Copied!\");\n    }\n\n    return (\n        <div className=\"command-container\">\n            <div className=\"command-input-container\">\n                <textarea \n                        className=\"command\"\n                        type=\"text\"\n                        defaultValue={selectedDeployment === \"select-deployment\" ? \"[SELECT DEPLOYMENT TYPE]\" : command}\n                />\n            </div>\n\n            <div className=\"btn-container\">\n                    <button \n                        className=\"copy-button\"\n                        onClick={copyCommand}\n                        disabled={selectedDeployment === \"select-deployment\" ? true : false}\n                    >\n                        {copy}\n                    </button>\n            </div>\n            \n            \n        </div>\n        \n    )\n}\n\n","import { useEffect, useState } from 'react';\nimport './Descriptions.css';\n\nexport default function Description({key, func, info, currentInfoOpen, setCurrentInfoOpen}) {\n    const [showInfoOption, setShowInfoOption] = useState(false);\n    const [showDesc, setShowDesc] = useState(false);\n\n    const handleExpand = () => {\n        if (currentInfoOpen !== func) {\n            setCurrentInfoOpen(func);\n            setShowDesc(true)\n            setShowInfoOption(true)\n        } else {\n            setCurrentInfoOpen(\"Function\")\n            setShowDesc(false)\n            setShowInfoOption(false)\n        }\n        \n    }\n\n    useEffect(() => {\n    }, [currentInfoOpen])\n\n    return (\n        <>\n            {func !== \"Function\" &&\n                <li \n                    key={key}\n                    className=\"desc-item\"\n                    onMouseEnter={() => handleExpand()}\n                    onMouseLeave={() => handleExpand()}\n                >\n                    <div className={`row ${currentInfoOpen === func && 'expanded'}`}>\n                        <div>\n                            {func}\n                        </div>\n                        {showInfoOption && \n                            <button\n                                className=\"expand\"\n                            >\n                                <div>\n                                    i&nbsp;\n                                </div>\n                                {(showDesc && currentInfoOpen === func) ? (\n                                    <div className=\"rotated\">\n                                        {`<`}\n                                    </div>\n                                ) : (\n                                    <div>\n                                        {`<`}\n                                    </div>\n                                )}\n                            </button>\n                        }\n                    </div>\n                    {currentInfoOpen === func && \n                        <div className=\"command-info\">\n                            <ul className=\"description\">\n                                <li>\n                                    <span className=\"info-key\">Description:&nbsp;</span>{info.description}\n                                </li>\n                            </ul>\n                        </div>\n                    }\n                </li>\n            }\n        </>\n\n    )\n}","import { useState } from 'react';\nimport {commands} from '../../utils/commands';\nimport { getOptionValues } from '../../utils/helpers';\nimport Description from './Description';\n\nimport './Descriptions.css';\n\nexport default function Descriptions({selectedDeployment}) {\n    const deploymentMap = commands[selectedDeployment];\n    const mapKeys = getOptionValues(deploymentMap);\n    // const [isInfoOpen, setIsInfoOpen] = useState(false);\n    const [currentInfoOpen, setCurrentInfoOpen] = useState(\"Function\");\n\n    const generateDescriptions = () => {\n        return mapKeys.map((mapKey, i) => {\n            const vals = deploymentMap[mapKey];\n            return (\n                <Description \n                    key={`desc-${i}`}\n                    func={mapKeys[i]}\n                    info={vals}\n                    currentInfoOpen={currentInfoOpen}\n                    setCurrentInfoOpen={setCurrentInfoOpen}\n                />\n            )\n        })\n    }\n\n    return (\n        <div>\n            <h4 className=\"section right\">Descriptions</h4>\n            {mapKeys ? (\n                <ul className=\"desc-list\">\n                    {generateDescriptions()}\n                </ul>\n            ) : (\n                <div>\n                    Choose Deployment to get descriptions.\n                </div>\n            )}\n        </div>\n    )\n}","// ANCHOR External Modules\nimport {useState} from 'react'\n\n// ANCHOR Internal Modules\nimport Deployment from './Components/Deployment/Deployment';\nimport Action from './Components/Action/Action';\nimport Command from './Components/Command/Command';\nimport {\n\t\tBrowserRouter as Router,\n\t\tRoute\n \t} from \"react-router-dom\";\n  \n\n// ANCHOR CSS\nimport './App.css';\nimport Descriptions from './Components/Descriptions/Descriptions';\n\n\n\nfunction App() {\n\tconst [selectedDeployment, setSelectedDeployment] = useState(\"Docker\");\n\tconst [selectedAction, setSelectedAction] = useState(\"Get Logs\")\n\tconst [hasNamespace, setHasNamespace] = useState(false);\n\tconst [namespace, setNamespace] = useState(\"\");\n\tconst [option, setOption] = useState(\"\");\n\tconst [command, setCommand] = useState(\"\");\n\n\treturn (\n\t\t<Router>\n\t\t<div className=\"App\">\n\t\t\t<img \n\t\t\t\talt=\"sourcegraph-logo\" \n\t\t\t\tsrc=\"https://github.com/sourcegraph/support-generator/blob/main/public/images/Sourcegraph_Logo_FullColor_light.png?raw=true\" \n\t\t\t\tclassName=\"logo\"\n\t\t\t/>\n\t\t\t<h2 className=\"subtitle\">Command Generator</h2>\n\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"actions\">\n\n\t\t\t\t\t{/* USER selects their deployment */}\n\t\t\t\t\t<Route path=\"/:deployment?/:action?/:podParam?/:namespaceParam?\" component={()=> (\n\t\t\t\t\t\t<div className=\"deploy-container\">\n\t\t\t\t\t\t\t<Deployment\n\t\t\t\t\t\t\t\tselectedDeployment={selectedDeployment}\n\t\t\t\t\t\t\t\tsetSelectedDeployment={setSelectedDeployment}\n\t\t\t\t\t\t\t\tsetSelectedAction={setSelectedAction}\n\t\t\t\t\t\t\t\thasNamespace={hasNamespace}\n\t\t\t\t\t\t\t\tsetHasNamespace={setHasNamespace}\n\t\t\t\t\t\t\t\tnamespace={namespace}\n\t\t\t\t\t\t\t\tsetNamespace={setNamespace}\n\t\t\t\t\t\t\t\tsetCommand={setCommand}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{/* USER selects the action they want to take */}\n\t\t\t\t\t\t\t<Action\n\t\t\t\t\t\t\t\tselectedDeployment={selectedDeployment}\n\t\t\t\t\t\t\t\tselectedAction={selectedAction}\n\t\t\t\t\t\t\t\tsetSelectedAction={setSelectedAction}\n\t\t\t\t\t\t\t\toption={option}\n\t\t\t\t\t\t\t\tsetOption={setOption}\n\t\t\t\t\t\t\t\tcommand={command}\n\t\t\t\t\t\t\t\tsetCommand={setCommand}\n\t\t\t\t\t\t\t\thasNamespace={hasNamespace}\n\t\t\t\t\t\t\t\tnamespace={namespace}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)} />\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"line-break\">\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"descriptions-container\">\n\t\t\t\t\t<Descriptions \n\t\t\t\t\t\tselectedDeployment={selectedDeployment}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\n\t\t\t{/* Command generated from the first two options. */}\n\t\t\t<div>\n\t\t\t\t<Command \n\t\t\t\t\tselectedDeployment={selectedDeployment}\n\t\t\t\t\tselectedAction={selectedAction}\n\t\t\t\t\tcommand={command}\n\t\t\t\t\tsetCommand={setCommand}\n\t\t\t\t\tnamespace={namespace}\n\t\t\t\t\toption={option}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}